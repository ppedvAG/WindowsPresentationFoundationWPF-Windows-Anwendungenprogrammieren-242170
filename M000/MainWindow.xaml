<Window x:Class="M000.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:local="clr-namespace:M000"
		xmlns:valid="clr-namespace:M000.Validation"
        Title="MainWindow" Height="450" Width="300"
		DataContext="{Binding RelativeSource={RelativeSource Self}}"
		WindowStartupLocation="CenterScreen"
		Topmost="True"
		SizeToContent="Height"
		ResizeMode="NoResize"
		Style="{StaticResource WindowStyle}">
	<Window.Resources>
		<local:BooleanToGenderConverter x:Key="BGC"/>
		<ControlTemplate x:Key="ErrorTemp">
			<StackPanel>
				<Border BorderBrush="Red" BorderThickness="3">
					<!--AdornedElementPlaceholder: Das Element, welches gerade Validiert wird-->
					<!--z.B. TextBox, DatePicker, ...-->
					<AdornedElementPlaceholder Name="AEP"/>
				</Border>
				<!--Fehlermeldung anzeigen-->
				<!--Text muss hier ein Binding enthalten auf das AdornedElement-->
				<!--Das AdornedElement enthält die Fehlermeldung-->
				<Popup IsOpen="{Binding ElementName=AEP, Path=AdornedElement.IsMouseOver, Mode=OneWay}"
					   Placement="Mouse">
					<TextBlock Background="Red" FontSize="14" Foreground="White" Padding="3"
						   Text="{Binding ElementName=AEP, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
				</Popup>
			</StackPanel>
		</ControlTemplate>
	</Window.Resources>
    <StackPanel Margin="5, 0, 5, 5">
		<UniformGrid>
			<TextBlock Text="Vorname: "/>
			<TextBox Validation.ErrorTemplate="{StaticResource ErrorTemp}">
				<TextBox.Text>
					<Binding Path="DiePerson.Vorname" UpdateSourceTrigger="PropertyChanged">
						<Binding.ValidationRules>
							<valid:LengthValidation ValidatesOnTargetUpdated="True"/>
							<valid:LetterValidation ValidatesOnTargetUpdated="True"/>
						</Binding.ValidationRules>
					</Binding>
				</TextBox.Text>
			</TextBox>
		</UniformGrid>
		<UniformGrid>
			<TextBlock Text="Nachname: "/>
			<TextBox Validation.ErrorTemplate="{StaticResource ErrorTemp}">
				<TextBox.Text>
					<Binding Path="DiePerson.Nachname" UpdateSourceTrigger="PropertyChanged">
						<Binding.ValidationRules>
							<valid:LengthValidation ValidatesOnTargetUpdated="True"/>
							<valid:LetterValidation ValidatesOnTargetUpdated="True"/>
						</Binding.ValidationRules>
					</Binding>
				</TextBox.Text>
			</TextBox>
		</UniformGrid>
		<UniformGrid>
			<TextBlock Text="Geburtsdatum: "/>
			<DatePicker Validation.ErrorTemplate="{StaticResource ErrorTemp}">
				<DatePicker.SelectedDate>
					<Binding Path="DiePerson.GebDat" UpdateSourceTrigger="PropertyChanged">
						<Binding.ValidationRules>
							<valid:DateValidation ValidatesOnTargetUpdated="True"/>
						</Binding.ValidationRules>
					</Binding>
				</DatePicker.SelectedDate>
			</DatePicker>
		</UniformGrid>
		<UniformGrid>
			<TextBlock Text="Lieblingsfarbe: "/>
			<ComboBox ItemsSource="{local:Colors}"
					  Validation.ErrorTemplate="{StaticResource ErrorTemp}"
					  SelectedValuePath="Color">
				<ComboBox.SelectedValue>
					<Binding Path="DiePerson.Lieblingsfarbe" UpdateSourceTrigger="PropertyChanged">
						<Binding.ValidationRules>
							<valid:ColorValidation ValidatesOnTargetUpdated="True"/>
						</Binding.ValidationRules>
					</Binding>
				</ComboBox.SelectedValue>
				
				<ComboBox.ItemTemplate>
					<DataTemplate>
						<StackPanel Orientation="Horizontal">
							<Rectangle Width="20" Height="20" Fill="{Binding Brush}"
									   Stroke="Black"/>
							<TextBlock Text="{Binding Name}"
									   Margin="5, 0, 0, 0"/>
							<TextBlock Text="{Binding HexCode, StringFormat='({0})'}"
									   Margin="5, 0, 0, 0"/>
						</StackPanel>
					</DataTemplate>
				</ComboBox.ItemTemplate>
				<!--<ComboBoxItem Content="Rot" Foreground="Red"/>
				<ComboBoxItem Content="Grün" Foreground="Green"/>
				<ComboBoxItem Content="Blau" Foreground="Blue"/>
				<ComboBoxItem Content="Geld" Foreground="Yellow"/>-->
			</ComboBox>
		</UniformGrid>
		<UniformGrid>
			<TextBlock Text="Verheiratet: "/>
			<CheckBox IsChecked="{Binding DiePerson.Verheiratet}"/>
		</UniformGrid>
		<UniformGrid>
			<TextBlock Text="Geschlecht: "/>
			<StackPanel>
				<RadioButton Content="Männlich" 
							 IsChecked="{Binding DiePerson.Geschlecht, Converter={StaticResource BGC}, ConverterParameter={x:Static local:Geschlecht.M}}"/>
				<RadioButton Content="Weiblich"
							 IsChecked="{Binding DiePerson.Geschlecht, Converter={StaticResource BGC}, ConverterParameter={x:Static local:Geschlecht.W}}"/>
				<RadioButton Content="Divers"
							 IsChecked="{Binding DiePerson.Geschlecht, Converter={StaticResource BGC}, ConverterParameter={x:Static local:Geschlecht.D}}"/>
			</StackPanel>
		</UniformGrid>
		<UniformGrid Margin="100, 5, 0, 0">
			<Button Content="Abbrechen" Margin="0, 0, 2.5, 0"/>
			<Button Content="OK" Margin="2.5, 0, 0, 0" Click="Button_Click"/>
		</UniformGrid>
    </StackPanel>
</Window>
